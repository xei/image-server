#limit_req_zone "1" zone=two-req-per-sec:32k rate=2r/s;
server {
        listen 9001;

        allow 127.0.0.1;
        deny all;

        #limit_req zone=two-req-per-sec burst=10;

        access_log /var/log/nginx/image-filter-server.access.log;
        error_log /var/log/nginx/image-filter-server.error.log;

        # Uncomment the following lines if the images are stored in a seperate server and
        # this server is a reverse proxy to filter them.
        #
	# set $image_storage_address 'storage.example.com';
        # # Use Google public DNS to resolve the domain.
	# resolver 8.8.8.8;
	# resolver_timeout 5s;

	# Scale down based on width and inject watermark
	location ~ "^/img/(?<width>\d+)/(?<path>.+)$" {
                include snippets/image-filter-params/scale-watermark.conf;
                alias /usr/share/nginx/img/raw/$path;
                # proxy_pass http://$image_storage_address/$path;
        }

        # Crop to fill viewports with SEO friendly images and inject watermark
	location ~ ^/img/(?<width>\d+)x(?<height>\d+)/image/(?<path>.+)$ {
                include snippets/image-filter-params/crop-watermark.conf;
		alias /usr/share/nginx/img/raw/$path;
                # proxy_pass http://$image_storage_address/$path;
	}

	# Scale down based on width (without injecting watermark) for admin panel
	location ~ "^/img/nowm/(?<width>\d+)/(?<path>.+)$" {
                include snippets/image-filter-params/scale.conf;
                alias /usr/share/nginx/img/raw/$path;
                # proxy_pass http://$image_storage_address/$path;
        }
}